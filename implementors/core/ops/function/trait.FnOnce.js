(function() {var implementors = {};
implementors["corundum"] = [{"text":"impl&lt;R, P:&nbsp;<a class=\"trait\" href=\"corundum/alloc/trait.MemPool.html\" title=\"trait corundum::alloc::MemPool\">MemPool</a>, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'static <a class=\"struct\" href=\"corundum/stm/struct.Journal.html\" title=\"struct corundum::stm::Journal\">Journal</a>&lt;P&gt;) for <a class=\"struct\" href=\"corundum/struct.AssertTxInSafe.html\" title=\"struct corundum::AssertTxInSafe\">AssertTxInSafe</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"corundum/trait.TxOutSafe.html\" title=\"trait corundum::TxOutSafe\">TxOutSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'static <a class=\"struct\" href=\"corundum/stm/struct.Journal.html\" title=\"struct corundum::stm::Journal\">Journal</a>&lt;P&gt;) -&gt; R,&nbsp;</span>","synthetic":false,"types":["corundum::marker::AssertTxInSafe"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()